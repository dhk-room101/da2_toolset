<mvvm:MVVMWindow x:Class="Toolset.WPF.MainWindow" Name="ToolsetWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="{Binding DataContext.Title, ElementName=grid}"
        WindowState="Maximized"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:cmd="clr-namespace:Microsoft.Expression.Interactivity.Core;assembly=Microsoft.Expression.Interactions"
        xmlns:inputToolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit" 
        xmlns:mvvm="clr-namespace:MVVMSidekick.Views;assembly=MVVMSidekick"        
        xmlns:vm="clr-namespace:Toolset.WPF.ViewModels" >
    
     <FrameworkElement.Resources >
        <vm:MainWindow_Model x:Key="MainVM" />
        <SolidColorBrush x:Key="WindowBrush" Color="#FF333333"/>
     </FrameworkElement.Resources>

     <Window.Style>
          <Style TargetType="{x:Type Window}">
               <Setter Property="Background" Value="{StaticResource WindowBrush}"/>
          </Style>
     </Window.Style>

     <Grid x:Name="grid" DataContext="{Binding Mode=OneWay, Source={StaticResource MainVM}}">
          <Grid.RowDefinitions>
               <RowDefinition Height="Auto" />
               <RowDefinition Height="Auto" />
               <RowDefinition Height="*" />
               <RowDefinition Height="Auto" />
          </Grid.RowDefinitions>
          <Grid.ColumnDefinitions>
               <ColumnDefinition Width="Auto" />
               <ColumnDefinition Width="*" />
          </Grid.ColumnDefinitions>
          <ComboBox IsEnabled="False" x:Name="modules" Width="200" ToolTip="Selecting modules"
                    Grid.Column="0" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Top"
                    SelectedItem="{Binding SelectedModule, Mode=TwoWay}"
                    ItemsSource="{Binding Path=Modules, Mode=TwoWay}">
               <ComboBox.ItemTemplate>
                    <DataTemplate>
                         <StackPanel Orientation="Horizontal">
                              <TextBlock Text="{Binding DisplayName}" />
                         </StackPanel>
                    </DataTemplate>
               </ComboBox.ItemTemplate>
          </ComboBox>
          <TextBox x:Name="textBox" Width="200" ToolTip="Autocomplete Box"
                   Grid.Column="0" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Top"
                   Text="{Binding Autocomplete, UpdateSourceTrigger=PropertyChanged}">
          </TextBox>
          <ListBox x:Name="resourceList" Width="200" ToolTip="Selecting resource" 
                    Grid.Column="0" Grid.Row="2" HorizontalAlignment="Left" VerticalAlignment="Top"
                    SelectedItem="{Binding SelectedResource, Mode=TwoWay}"
                    ItemsSource="{Binding Path=FilteredResources, Mode=OneWay}">
               <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                         <i:InvokeCommandAction Command="{Binding CommandViewResource}"/>
                    </i:EventTrigger>
               </i:Interaction.Triggers>
               <ListBox.ItemTemplate>
                    <DataTemplate>
                         <StackPanel Orientation="Horizontal">
                              <TextBlock Text="{Binding Name}" />
                         </StackPanel>
                    </DataTemplate>
               </ListBox.ItemTemplate>
          </ListBox>
          <TextBox x:Name="statusBox" Width="200" ToolTip="Status" IsEnabled="False"
                   Grid.Column="0" Grid.Row="3" HorizontalAlignment="Left" VerticalAlignment="Top"
                   Text="{Binding Status, UpdateSourceTrigger=PropertyChanged}">
          </TextBox>
          <TabControl 
                    Grid.Row="2" Grid.Column="1"
                    Style="{StaticResource DefaultTabControlItem}"
                    ItemContainerStyle="{StaticResource DefaultTabItem}"
                    SelectedItem="{Binding SelectedTabItem, Mode=TwoWay}"
                    ItemsSource="{Binding Tabs, Mode=TwoWay}">
               <TabControl.ItemTemplate>
                    <DataTemplate>
                         <TextBlock>                            
                              <TextBlock Text="{Binding TabName}"/> 
                         </TextBlock>
                    </DataTemplate>
               </TabControl.ItemTemplate>
               <TabControl.ContentTemplate>
                    <DataTemplate>
                         <!--
                         the work around here is that we create the generic observable collection
                         of type object and its first element at index zero is the actual
                         Tab View that we want to display: conversations, plots etc.
                         -->
                         <ContentControl Content="{Binding TabContent.TabContentLayout[0]}" />
                    </DataTemplate>
               </TabControl.ContentTemplate>
          </TabControl>
     </Grid>
</mvvm:MVVMWindow>
